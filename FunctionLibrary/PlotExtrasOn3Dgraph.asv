clear;clf;clc;close all 
load('PESFull_Au18_1.mat')
PES=PESFull.Class;
hfig = PES.plot3DRepresentation(PESFull.AlignmentData{1},PESFull.AlignmentData{2});
%function hFig = PlotExtrasOn3Dgraph(hfig,PESFull)


ATOM_RADIUS = 1.7;
N_SPHERE_POINTS = 150;
PES = PES.interpolatePESGrid();
[CorrectionFunctions, centeredXYZCoordsa0b0]=determineMatlabAndOwnCoordsCorrectionFunctions(PESFull.AlignmentData{1},PESFull.AlignmentData{2});
alphaGridCorrected = CorrectionFunctions.CorrectionFunctionAlpha(PES.alphaGrid);
betaGridCorrected = CorrectionFunctions.CorrectionFunctionBeta(PES.betaGrid);

CorrectionFunctionInverse.Alpha=

%MinsCorrected = [CorrectionFunctions.CorrectionFunctionAlpha(PESFull.Mins(:,1)) CorrectionFunctions.CorrectionFunctionBeta(PESFull.Mins(:,2))];

[X, Y, Z] = sphere(N_SPHERE_POINTS);
hold on

for i=1:size(centeredXYZCoordsa0b0,1)
    idxAtom = i;
    %[x, y, z]= PES.centerSphereOnAtomLocation(X, Y, Z, centeredXYZCoordsa0b0, idxAtom, ATOM_RADIUS);
    %[currAlpha, currBeta] = PES.convertSphereCartesianCoordsToAlphaAndBeta(x,y,z);
    [x, y, z]= PES.centerSphereOnAtomLocation(X, Y, Z, centeredXYZCoordsa0b0, idxAtom, ATOM_RADIUS)
    MinsAlphaBeta=PES.convertSphereCartesianCoordsToAlphaAndBeta(x,y,z)
    
    currEnergies =  PES.getEnergiesOnSphere(alphaGridCorrected, betaGridCorrected, PES.energiesGrid, currAlpha, currBeta);
    s = surf(x,y,z,currEnergies,'LineStyle','none');
    s.SpecularStrength = 0.1;
    s.AmbientStrength = 0.4;
    s.DiffuseStrength = 0.8;
    hold on
end

light('position',[0 0 5]);
lighting flat;
%lighting gouraud;
hold off;
%   colormap parula
axis off;
view([45,30]);
axis vis3d;
rotate3d;
camlight(-180,-90);
axis tight
axis equal

%
colorbarLabel = 'Energy relative to most stable state / eV';
hColorbar = PES.plotColorbar(hFig, colorbarLabel);










%end
